import pandas as pd
import streamlit as st
import os
import json
from datetime import datetime
from hashlib import sha256
import pytz

# –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º
USERS_FILE = "users.json"
PLAYERS_FILE = "players.json"
SUPERVISORS_FILE = "supervisors.json"
STATUSES_FILE = "statuses.json"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤, –µ—Å–ª–∏ –æ–Ω–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç
if not os.path.exists(USERS_FILE):
    with open(USERS_FILE, "w") as f:
        json.dump({"123": {"password": sha256("Admin$2024!Secure".encode()).hexdigest(), "role": "admin"}}, f)

if not os.path.exists(PLAYERS_FILE):
    with open(PLAYERS_FILE, "w") as f:
        json.dump({}, f)

if not os.path.exists(SUPERVISORS_FILE):
    with open(SUPERVISORS_FILE, "w") as f:
        json.dump(["qwe123"], f)

if not os.path.exists(STATUSES_FILE):
    with open(STATUSES_FILE, "w") as f:
        json.dump({}, f)

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–æ–≤
with open(USERS_FILE, "r") as f:
    users = json.load(f)

with open(PLAYERS_FILE, "r") as f:
    steam_id_to_name_supervisor = json.load(f)

with open(SUPERVISORS_FILE, "r") as f:
    supervisors = json.load(f)

with open(STATUSES_FILE, "r") as f:
    player_statuses = json.load(f)

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
def save_users():
    with open(USERS_FILE, "w") as f:
        json.dump(users, f)

def save_players():
    with open(PLAYERS_FILE, "w") as f:
        json.dump(steam_id_to_name_supervisor, f)

def save_supervisors():
    with open(SUPERVISORS_FILE, "w") as f:
        json.dump(supervisors, f)

def save_statuses():
    with open(STATUSES_FILE, "w") as f:
        json.dump(player_statuses, f)

# –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ SteamID64 –≤ —Ñ–æ—Ä–º–∞—Ç STEAM_1:X:Y
def steamid64_to_steamid(steamid64):
    try:
        base_id = 76561197960265728
        account_id = int(steamid64) - base_id
        y = account_id % 2
        z = account_id // 2
        return f"STEAM_1:{y}:{z}"
    except ValueError:
        return None

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤ –ø–æ –¥–∞—Ç–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è
def check_and_clean_statuses():
    today = datetime.now().date()
    to_remove = [steam_id for steam_id, details in player_statuses.items()
                 if datetime.strptime(details["end_date"], "%Y-%m-%d").date() < today]
    for steam_id in to_remove:
        del player_statuses[steam_id]
    save_statuses()

# –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ—Ä–º—ã —Ç–∏–∫–µ—Ç–æ–≤ –¥–ª—è –∏–≥—Ä–æ–∫–∞
def get_ticket_quota(status_details, day_of_week):
    default_quota = 60
    reduced_quota = 30  # –ü–æ–Ω–∏–∂–µ–Ω–Ω–∞—è –Ω–æ—Ä–º–∞
    if status_details.get("status") in ["–æ—Ç–ø—É—Å–∫", "–º–æ—Ä–æ–∑"]:
        return 0
    if status_details.get("return_day") == day_of_week:
        return reduced_quota
    return default_quota

# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
def authenticate_user(username, password):
    hashed_password = sha256(password.encode()).hexdigest()
    user = users.get(username)
    if user and user["password"] == hashed_password:
        return user["role"]
    return None

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def is_admin():
    return st.session_state.get("role") == "admin"

def is_supervisor():
    return st.session_state.get("role") == "—Å–ª–µ–¥—è—â–∏–π"

# –°–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
if "authenticated" not in st.session_state:
    st.session_state["authenticated"] = False
if "role" not in st.session_state:
    st.session_state["role"] = None

if not st.session_state["authenticated"]:
    st.title("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è")
    username = st.text_input("–õ–æ–≥–∏–Ω:", key="login_input")
    password = st.text_input("–ü–∞—Ä–æ–ª—å:", type="password", key="password_input")
    if st.button("–í–æ–π—Ç–∏", key="login_button"):
        role = authenticate_user(username, password)
        if role:
            st.session_state["authenticated"] = True
            st.session_state["role"] = role
            st.success(f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {username}!")
        else:
            st.error("–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å.")
else:
    # –û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç—ë–∫—à–∏—Ö —Å—Ç–∞—Ç—É—Å–æ–≤
    check_and_clean_statuses()

    # –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞
    if st.button("–í—ã–π—Ç–∏", key="logout_button"):
        st.session_state.clear()
        st.stop()

    # –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    st.title("–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–∏–∫–µ—Ç–∞–º–∏")

    if is_admin():
        tab1, tab2, tab3, tab4, tab5, tab6 = st.tabs([
            "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–∏–∫–µ—Ç–æ–≤",
            "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞",
            "–£–¥–∞–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞",
            "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞–º–∏",
            "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–ª–µ–¥—è—â–µ–≥–æ",
            "–£–¥–∞–ª–µ–Ω–∏–µ —Å–ª–µ–¥—è—â–µ–≥–æ"
        ])
    elif is_supervisor():
        tab1, tab2, tab3, tab4 = st.tabs([
            "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–∏–∫–µ—Ç–æ–≤",
            "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞",
            "–£–¥–∞–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞",
            "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞–º–∏"
        ])

    # –í–∫–ª–∞–¥–∫–∞ 1: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–∏–∫–µ—Ç–æ–≤
    with tab1:
        st.subheader("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–∏–∫–µ—Ç–æ–≤")
        uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ CSV-—Ñ–∞–π–ª —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏", type="csv", key="upload_stats")

        if uploaded_file:
            data = pd.read_csv(uploaded_file)
            data['SteamID'] = data['SteamID'].astype(str)
            data['FormattedSteamID'] = data['SteamID'].apply(steamid64_to_steamid)

            selected_supervisor = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–µ–¥—è—â–µ–≥–æ:", supervisors, key="select_supervisor_stats")
            day_choice = st.radio("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å:", ["–ß–µ—Ç–≤–µ—Ä–≥", "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ"], key="day_choice_stats")
            today_date = datetime.now().strftime("%d.%m.%Y")

            ticket_column = "WeekAmount"
            filtered_ids = [
                steam_id for steam_id, details in steam_id_to_name_supervisor.items()
                if details["supervisor"] == selected_supervisor
            ]
            filtered_data = data[data['FormattedSteamID'].isin(filtered_ids)]

            # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–≥—Ä–æ–∫–æ–≤
            st.subheader("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–æ–≤:")
            player_stats = []
            for _, row in filtered_data.iterrows():
                steam_id = row['FormattedSteamID']
                nickname = steam_id_to_name_supervisor.get(steam_id, {}).get("name", "Unknown")
                tickets = row.get(ticket_column, 0)
                status_details = player_statuses.get(steam_id, {})
                ticket_quota = get_ticket_quota(status_details, day_choice)

                # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–ø—É—Å–∫–µ/–º–æ—Ä–æ–∑–µ
                status_text = ""
                if status_details.get("status") == "–æ—Ç–ø—É—Å–∫":
                    status_text = " (–û—Ç–ø—É—Å–∫ üìÖ)"
                elif status_details.get("status") == "–º–æ—Ä–æ–∑":
                    status_text = " (–ú–æ—Ä–æ–∑ ‚ùÑÔ∏è)"

                player_stats.append(f"{nickname} - {tickets}/{ticket_quota}{status_text}")

            # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–∞–∫ —Å–ø–∏—Å–æ–∫
            for stat in player_stats:
                st.write(stat)

            # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
            moscow_tz = pytz.timezone("Europe/Moscow")
            today_date = datetime.now(moscow_tz).strftime("%d.%m.%Y")
            report_lines = [
                f"# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ {day_choice} —Å–æ—Å—Ç–∞–≤–∞ \"{selected_supervisor}\" ({today_date})"
            ]
            for _, row in filtered_data.iterrows():
                steam_id = row['FormattedSteamID']
                discord = steam_id_to_name_supervisor.get(steam_id, {}).get("discord", "Unknown")
                tickets = row.get(ticket_column, 0)
                status_details = player_statuses.get(steam_id, {})

                if status_details.get("status") == "–æ—Ç–ø—É—Å–∫":
                    report_lines.append(f"@{discord} - –û—Ç–ø—É—Å–∫ üìÖ")
                elif status_details.get("status") == "–º–æ—Ä–æ–∑":
                    report_lines.append(f"@{discord} - –ú–æ—Ä–æ–∑ ‚ùÑÔ∏è")
                else:
                    if day_choice == "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ":
                        if tickets >= 60:
                            status = "[–æ—Ç—ã–≥—Ä–∞–ª –Ω–æ—Ä–º—É] ‚úÖ"
                        elif 50 <= tickets < 60:
                            status = "[–Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º] ‚úÖ"
                        elif 35 <= tickets < 50:
                            status = "[+1 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ] ‚ùå"
                        elif 15 <= tickets < 35:
                            status = "[+1 –≤—ã–≥–æ–≤–æ—Ä] ‚ùå"
                        else:
                            status = "[–∏–Ω–∞–∫—Ç–∏–≤, –ø—Ä–∏—á–∏–Ω—É –≤ –õ–°] ‚ùå"
                        report_lines.append(f"@{discord} - {tickets} —Ç–∏–∫–µ—Ç–æ–≤ {status}")
                    else:
                        report_lines.append(f"@{discord} - {tickets} —Ç–∏–∫–µ—Ç–æ–≤")

            # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –æ—Ç—á–µ—Ç
            report_text = "\n".join(report_lines)
            st.text_area("–û—Ç—á–µ—Ç:", value=report_text, height=300, key="report_area")

    # –í–∫–ª–∞–¥–∫–∞ 2: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞
    with tab2:
        st.subheader("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞")
        new_steam_id = st.text_input("–í–≤–µ–¥–∏—Ç–µ SteamID64 –∏–ª–∏ STEAM_1:X:Y:", key="add_player_steam_id")
        new_nickname = st.text_input("–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º:", key="add_player_nickname")
        new_discord = st.text_input("–í–≤–µ–¥–∏—Ç–µ Discord:", key="add_player_discord")
        new_supervisor = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–µ–¥—è—â–µ–≥–æ:", supervisors, key="add_player_supervisor")

        if st.button("–î–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫–∞", key="add_player_button"):
            if new_steam_id and new_nickname and new_discord and new_supervisor:
                formatted_id = steamid64_to_steamid(new_steam_id)
                if not formatted_id:
                    st.error("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π SteamID.")
                elif formatted_id not in steam_id_to_name_supervisor:
                    steam_id_to_name_supervisor[formatted_id] = {
                        "name": new_nickname,
                        "discord": new_discord,
                        "supervisor": new_supervisor
                    }
                    save_players()
                    st.success(f"–ò–≥—Ä–æ–∫ {new_nickname} –¥–æ–±–∞–≤–ª–µ–Ω!")
                else:
                    st.error("–ò–≥—Ä–æ–∫ —Å —Ç–∞–∫–∏–º SteamID —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
            else:
                st.error("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è.")

    # –í–∫–ª–∞–¥–∫–∞ 3: –£–¥–∞–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞
    with tab3:
        st.subheader("–£–¥–∞–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞")
        selected_supervisor = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–µ–¥—è—â–µ–≥–æ:", supervisors, key="delete_supervisor")
        players = {k: v for k, v in steam_id_to_name_supervisor.items() if v["supervisor"] == selected_supervisor}
        selected_player = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä–æ–∫–∞:", [v["name"] for v in players.values()], key="delete_player")
        steam_id = next((k for k, v in players.items() if v["name"] == selected_player), None)

        if st.button("–£–¥–∞–ª–∏—Ç—å –∏–≥—Ä–æ–∫–∞", key="delete_player_button"):
            if steam_id:
                del steam_id_to_name_supervisor[steam_id]
                save_players()
                st.success(f"–ò–≥—Ä–æ–∫ {selected_player} —É–¥–∞–ª—ë–Ω.")
            else:
                st.error("–ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω.")

    # –í–∫–ª–∞–¥–∫–∞ 4: –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞–º–∏
    with tab4:
        st.subheader("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞–º–∏")
        selected_supervisor = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–µ–¥—è—â–µ–≥–æ:", supervisors, key="status_supervisor")
        players = {k: v for k, v in steam_id_to_name_supervisor.items() if v["supervisor"] == selected_supervisor}
        selected_player = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä–æ–∫–∞:", [v["name"] for v in players.values()], key="status_player")
        steam_id = next((k for k, v in players.items() if v["name"] == selected_player), None)
        new_status = st.radio("–°—Ç–∞—Ç—É—Å –∏–≥—Ä–æ–∫–∞:", ["–ù–µ—Ç", "–û—Ç–ø—É—Å–∫", "–ú–æ—Ä–æ–∑"], key="status_choice")
        end_date = st.date_input("–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞:", key="status_end_date")

        if st.button("–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å", key="update_status_button"):
            if new_status == "–ù–µ—Ç":
                player_statuses.pop(steam_id, None)
                save_statuses()
                st.success(f"–°—Ç–∞—Ç—É—Å –¥–ª—è {selected_player} —É–¥–∞–ª—ë–Ω.")
            else:
                player_statuses[steam_id] = {"status": new_status.lower(), "end_date": str(end_date)}
                save_statuses()
                st.success(f"–°—Ç–∞—Ç—É—Å {new_status} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–ª—è {selected_player} –¥–æ {end_date}.")

    # –í–∫–ª–∞–¥–∫–∞ 5: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–ª–µ–¥—è—â–µ–≥–æ
    if is_admin():
        with tab5:
            st.subheader("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–ª–µ–¥—è—â–µ–≥–æ")
            supervisor_login = st.text_input("–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –¥–ª—è —Å–ª–µ–¥—è—â–µ–≥–æ:", key="register_supervisor_login")
            supervisor_password = st.text_input("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è —Å–ª–µ–¥—è—â–µ–≥–æ:", type="password", key="register_supervisor_password")

            if st.button("–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–ª–µ–¥—è—â–µ–≥–æ", key="register_supervisor_button"):
                if supervisor_login and supervisor_password:
                    hashed_password = sha256(supervisor_password.encode()).hexdigest()
                    users[supervisor_login] = {"password": hashed_password, "role": "—Å–ª–µ–¥—è—â–∏–π"}
                    save_users()
                    supervisors.append(supervisor_login)
                    save_supervisors()
                    st.success(f"–°–ª–µ–¥—è—â–∏–π {supervisor_login} –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.")
                else:
                    st.error("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è.")

    # –í–∫–ª–∞–¥–∫–∞ 6: –£–¥–∞–ª–µ–Ω–∏–µ —Å–ª–µ–¥—è—â–µ–≥–æ
    if is_admin():
        with tab6:
            st.subheader("–£–¥–∞–ª–µ–Ω–∏–µ —Å–ª–µ–¥—è—â–µ–≥–æ")
            selected_supervisor = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–µ–¥—è—â–µ–≥–æ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:", supervisors, key="remove_supervisor")
            if st.button("–£–¥–∞–ª–∏—Ç—å —Å–ª–µ–¥—è—â–µ–≥–æ", key="remove_supervisor_button"):
                supervisors.remove(selected_supervisor)
                save_supervisors()
                users.pop(selected_supervisor, None)
                save_users()
                st.success(f"–°–ª–µ–¥—è—â–∏–π {selected_supervisor} —É–¥–∞–ª—ë–Ω.")
